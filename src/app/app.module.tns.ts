import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { NativeScriptModule } from 'nativescript-angular/nativescript.module';

import { AppRoutingModule } from '@src/app/app-routing.module.tns';
import { AppComponent } from '@src/app/app.component';
import { AutoGeneratedComponent } from '@src/app/auto-generated/auto-generated.component';
import { HeaderComponent } from '@src/app/header/header.component';
import { DuplicateComponent } from '@src/app/dashboard/duplicate/duplicate.component';
import { DigitalRiceiptComponent } from '@src/app/digitalRiceipt/digital-riceipt/digital-riceipt.component';
import { RedAlertComponent } from '@src/app/alert/red-alert/red-alert.component';
import { FileValidateComponent } from '@src/app/fileValidate/file-validate/file-validate.component';
import { ReconSummaryComponent } from '@src/app/ReconSummary/recon-summary/recon-summary.component';
// import { StatusComponent } from '@src/app/recon_status/status/status.component';
// import { SummaryComponent } from '@src/app/DR_Summary/summary/summary.component';
// import { SignupComponent } from '@src/app/ragistration/signup/signup.component';



// Uncomment and add to NgModule imports if you need to use two-way binding
// import { NativeScriptFormsModule } from 'nativescript-angular/forms';

// Uncomment and add to NgModule imports  if you need to use the HTTP wrapper
// import { NativeScriptHttpClientModule } from 'nativescript-angular/http-client';

@NgModule({
  declarations: [
    AppComponent,
    AutoGeneratedComponent,
    HeaderComponent,
    DuplicateComponent,
    DigitalRiceiptComponent,
    RedAlertComponent,
    FileValidateComponent,
    ReconSummaryComponent,
    // StatusComponent,
    // SummaryComponent,
    // SignupComponent,
   
  ],
  imports: [
    NativeScriptModule,
    AppRoutingModule,
  ],
  providers: [],
  bootstrap: [AppComponent],
  schemas: [NO_ERRORS_SCHEMA]
})
/*
Pass your application module to the bootstrapModule function located in main.ts to start your app
*/
export class AppModule { }
